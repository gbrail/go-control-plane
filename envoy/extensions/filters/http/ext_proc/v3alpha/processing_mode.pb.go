// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.10.1
// source: envoy/extensions/filters/http/ext_proc/v3alpha/processing_mode.proto

package envoy_extensions_filters_http_ext_proc_v3alpha

import (
	_ "github.com/cncf/udpa/go/udpa/annotations"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ProcessingMode_SyncMode int32

const (
	ProcessingMode_SYNC_DEFAULT ProcessingMode_SyncMode = 0
	ProcessingMode_SYNC         ProcessingMode_SyncMode = 1
	ProcessingMode_ASYNC        ProcessingMode_SyncMode = 2
	ProcessingMode_SKIP         ProcessingMode_SyncMode = 3
)

// Enum value maps for ProcessingMode_SyncMode.
var (
	ProcessingMode_SyncMode_name = map[int32]string{
		0: "SYNC_DEFAULT",
		1: "SYNC",
		2: "ASYNC",
		3: "SKIP",
	}
	ProcessingMode_SyncMode_value = map[string]int32{
		"SYNC_DEFAULT": 0,
		"SYNC":         1,
		"ASYNC":        2,
		"SKIP":         3,
	}
)

func (x ProcessingMode_SyncMode) Enum() *ProcessingMode_SyncMode {
	p := new(ProcessingMode_SyncMode)
	*p = x
	return p
}

func (x ProcessingMode_SyncMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingMode_SyncMode) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_enumTypes[0].Descriptor()
}

func (ProcessingMode_SyncMode) Type() protoreflect.EnumType {
	return &file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_enumTypes[0]
}

func (x ProcessingMode_SyncMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingMode_SyncMode.Descriptor instead.
func (ProcessingMode_SyncMode) EnumDescriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescGZIP(), []int{0, 0}
}

type ProcessingMode_BodyMode int32

const (
	ProcessingMode_BODY_DEFAULT     ProcessingMode_BodyMode = 0
	ProcessingMode_CHUNKED          ProcessingMode_BodyMode = 1
	ProcessingMode_BUFFERED         ProcessingMode_BodyMode = 2
	ProcessingMode_BUFFERED_PARTIAL ProcessingMode_BodyMode = 3
)

// Enum value maps for ProcessingMode_BodyMode.
var (
	ProcessingMode_BodyMode_name = map[int32]string{
		0: "BODY_DEFAULT",
		1: "CHUNKED",
		2: "BUFFERED",
		3: "BUFFERED_PARTIAL",
	}
	ProcessingMode_BodyMode_value = map[string]int32{
		"BODY_DEFAULT":     0,
		"CHUNKED":          1,
		"BUFFERED":         2,
		"BUFFERED_PARTIAL": 3,
	}
)

func (x ProcessingMode_BodyMode) Enum() *ProcessingMode_BodyMode {
	p := new(ProcessingMode_BodyMode)
	*p = x
	return p
}

func (x ProcessingMode_BodyMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingMode_BodyMode) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_enumTypes[1].Descriptor()
}

func (ProcessingMode_BodyMode) Type() protoreflect.EnumType {
	return &file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_enumTypes[1]
}

func (x ProcessingMode_BodyMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingMode_BodyMode.Descriptor instead.
func (ProcessingMode_BodyMode) EnumDescriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescGZIP(), []int{0, 1}
}

type ProcessingMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestHeaderMode     *ProcessingMode         `protobuf:"bytes,1,opt,name=request_header_mode,json=requestHeaderMode,proto3" json:"request_header_mode,omitempty"`
	ResponseHeaderMode    *ProcessingMode         `protobuf:"bytes,2,opt,name=response_header_mode,json=responseHeaderMode,proto3" json:"response_header_mode,omitempty"`
	RequestBodyMode       *ProcessingMode         `protobuf:"bytes,3,opt,name=request_body_mode,json=requestBodyMode,proto3" json:"request_body_mode,omitempty"`
	RequestBodyChunkMode  ProcessingMode_BodyMode `protobuf:"varint,4,opt,name=request_body_chunk_mode,json=requestBodyChunkMode,proto3,enum=envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode_BodyMode" json:"request_body_chunk_mode,omitempty"`
	ResponseBodyMode      *ProcessingMode         `protobuf:"bytes,5,opt,name=response_body_mode,json=responseBodyMode,proto3" json:"response_body_mode,omitempty"`
	ResponseBodyChunkMode ProcessingMode_BodyMode `protobuf:"varint,6,opt,name=response_body_chunk_mode,json=responseBodyChunkMode,proto3,enum=envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode_BodyMode" json:"response_body_chunk_mode,omitempty"`
	RequestTrailerMode    *ProcessingMode         `protobuf:"bytes,7,opt,name=request_trailer_mode,json=requestTrailerMode,proto3" json:"request_trailer_mode,omitempty"`
	ResponseTrailerMode   *ProcessingMode         `protobuf:"bytes,8,opt,name=response_trailer_mode,json=responseTrailerMode,proto3" json:"response_trailer_mode,omitempty"`
}

func (x *ProcessingMode) Reset() {
	*x = ProcessingMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessingMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingMode) ProtoMessage() {}

func (x *ProcessingMode) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingMode.ProtoReflect.Descriptor instead.
func (*ProcessingMode) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessingMode) GetRequestHeaderMode() *ProcessingMode {
	if x != nil {
		return x.RequestHeaderMode
	}
	return nil
}

func (x *ProcessingMode) GetResponseHeaderMode() *ProcessingMode {
	if x != nil {
		return x.ResponseHeaderMode
	}
	return nil
}

func (x *ProcessingMode) GetRequestBodyMode() *ProcessingMode {
	if x != nil {
		return x.RequestBodyMode
	}
	return nil
}

func (x *ProcessingMode) GetRequestBodyChunkMode() ProcessingMode_BodyMode {
	if x != nil {
		return x.RequestBodyChunkMode
	}
	return ProcessingMode_BODY_DEFAULT
}

func (x *ProcessingMode) GetResponseBodyMode() *ProcessingMode {
	if x != nil {
		return x.ResponseBodyMode
	}
	return nil
}

func (x *ProcessingMode) GetResponseBodyChunkMode() ProcessingMode_BodyMode {
	if x != nil {
		return x.ResponseBodyChunkMode
	}
	return ProcessingMode_BODY_DEFAULT
}

func (x *ProcessingMode) GetRequestTrailerMode() *ProcessingMode {
	if x != nil {
		return x.RequestTrailerMode
	}
	return nil
}

func (x *ProcessingMode) GetResponseTrailerMode() *ProcessingMode {
	if x != nil {
		return x.ResponseTrailerMode
	}
	return nil
}

var File_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto protoreflect.FileDescriptor

var file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDesc = []byte{
	0x0a, 0x44, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x2f, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x2e, 0x76,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a, 0x1d, 0x75, 0x64, 0x70, 0x61, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x08, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x2e, 0x76,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x70, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x2e,
	0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x2e, 0x76,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x7e, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x6c, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x2e, 0x76, 0x33, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x18, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x15, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x70, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x2e, 0x76,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x69, 0x6c, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x72, 0x0a, 0x15, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x13, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x3b, 0x0a,
	0x08, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x59, 0x4e,
	0x43, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53,
	0x59, 0x4e, 0x43, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x4b, 0x49, 0x50, 0x10, 0x03, 0x22, 0x4d, 0x0a, 0x08, 0x42, 0x6f,
	0x64, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x44,
	0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x48, 0x55, 0x4e,
	0x4b, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x55, 0x46, 0x46, 0x45, 0x52, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x55, 0x46, 0x46, 0x45, 0x52, 0x45, 0x44, 0x5f,
	0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x03, 0x42, 0x65, 0x0a, 0x3c, 0x69, 0x6f, 0x2e,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x2e, 0x76, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x42, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0xba, 0x80, 0xc8, 0xd1, 0x06, 0x02, 0x08, 0x01, 0xba, 0x80, 0xc8, 0xd1, 0x06, 0x02, 0x10, 0x02,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescData = file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDesc
)

func file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescData = protoimpl.X.CompressGZIP(file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescData)
	})
	return file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDescData
}

var file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_goTypes = []interface{}{
	(ProcessingMode_SyncMode)(0), // 0: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.SyncMode
	(ProcessingMode_BodyMode)(0), // 1: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodyMode
	(*ProcessingMode)(nil),       // 2: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode
}
var file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_depIdxs = []int32{
	2, // 0: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.request_header_mode:type_name -> envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode
	2, // 1: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.response_header_mode:type_name -> envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode
	2, // 2: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.request_body_mode:type_name -> envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode
	1, // 3: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.request_body_chunk_mode:type_name -> envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodyMode
	2, // 4: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.response_body_mode:type_name -> envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode
	1, // 5: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.response_body_chunk_mode:type_name -> envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.BodyMode
	2, // 6: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.request_trailer_mode:type_name -> envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode
	2, // 7: envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode.response_trailer_mode:type_name -> envoy.extensions.filters.http.ext_proc.v3alpha.ProcessingMode
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_init() }
func file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_init() {
	if File_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessingMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_depIdxs,
		EnumInfos:         file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_enumTypes,
		MessageInfos:      file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto = out.File
	file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_rawDesc = nil
	file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_goTypes = nil
	file_envoy_extensions_filters_http_ext_proc_v3alpha_processing_mode_proto_depIdxs = nil
}
